
一、安装
  1、npm install gulp -g  全局安装
  2、npm install gulp 本地安装
  3、npm init 初始化一个项目 生成package.json的配置文件
      配置文件内容：dependencies  线上开发依赖    devDependencies   本地开发依赖
  4、npm install gulp --save-dev  安装在本地开发依赖中  拷贝文件只拷贝本地内容
  
二、构建拷贝文件的任务
  1、引入gulp
  2、gulp.task('copy-index',function()){ //构建一个拷贝的任务  一个任务名称（可以随意写）
      gulp.src('找到要拷贝的文件路径')
          .pipe(gulp.dest('要拷贝到哪里去'))
  }
  3、执行gulp  gulp 任务名称把任务放在默认设置中  只执行gulp  
  
三、 各种插件
  1、npm install gulp-concat --save-dev 安装合并插件  --save-dev 可以简写-D
  2、//引入合并插件   npm install gulp-concat
  var concat = require('gulp-concat');

  //引入压缩js插件   npm install gulp-uglify -D
  var uglify = require('gulp-uglify');

  //引入服务  npm install gulp-webserver -D
  var webserver = require('gulp-webserver');
  gulp.task('serve',function(){
     gulp.src('./')  //启动服务的路径地址
          .pipe(webserver({
             port:80,            //配置端口号
             livereload:true,    //页面保存浏览器自动刷新
             directoryListing:{  //配置目录
                 enable:true,   //显示目录
                 path:'./'      //显示具体路径下的目录
           }))
  })
 

  /引入检测文件  npm install gulp-watchr -D
  var watch = require('gulp-watch');
  
  //引入sass编译   npm install gulp-sass -D  引入压缩css插件   npm install gulp-minify-css -D
  var sass = require('gulp-sass');
  var minify = require('gulp-minify-css');
  
  //引入gulp-webpack（js模块化）    npm install gulp-webpack vinyl-named -D(重命名插件)
  var webpack = require('gulp-webpack');
  var named = require('vinyl-named');
  
  //引入版本控制插件
  var rev = require('gulp-rev');   //生成加密文件
  var revCollector = require('gulp-rev-collector');  //替换文件
  
  3、大概整体的步骤：
  gulp.task('随意起一个文件名',function () {
      gulp.src(['./app/src/scripts/lib/script1.js','./app/src/scripts/lib/script2.js']) //找到要执行文件的路径
          .pipe(concat('script.js')) //执行合并文件 合并之后的名字
          .pipe(gulp.dest('./app/src/scripts/lib'))//文件执行后要放在哪
  });
  gulp.task('default',['watch','uglify']);//设置默认操作   只需在命令行执行gulp回车就行
